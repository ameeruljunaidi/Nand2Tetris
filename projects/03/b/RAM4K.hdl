// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=dmoa, b=dmob, c=dmoc, d=dmod, e=dmoe, f=dmof, g=dmog, h=dmoh);
    RAM512(in=in, load=dmoa, address=address[3..11], out=roa);
    RAM512(in=in, load=dmob, address=address[3..11], out=rob);
    RAM512(in=in, load=dmoc, address=address[3..11], out=roc);
    RAM512(in=in, load=dmod, address=address[3..11], out=rod);
    RAM512(in=in, load=dmoe, address=address[3..11], out=roe);
    RAM512(in=in, load=dmof, address=address[3..11], out=rof);
    RAM512(in=in, load=dmog, address=address[3..11], out=rog);
    RAM512(in=in, load=dmoh, address=address[3..11], out=roh);
    Mux8Way16(a=roa, b=rob, c=roc, d=rod, e=roe, f=rof, g=rog, h=roh, sel=address[0..2], out=out);
}