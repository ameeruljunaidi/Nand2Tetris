// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:

    DMux8Way(in=load, sel=address, a=dmoa, b=dmob, c=dmoc, d=dmod, e=dmoe, f=dmof, g=dmog, h=dmoh);
    Register(in=in, load=dmoa, out=roa);
    Register(in=in, load=dmob, out=rob);
    Register(in=in, load=dmoc, out=roc);
    Register(in=in, load=dmod, out=rod);
    Register(in=in, load=dmoe, out=roe);
    Register(in=in, load=dmof, out=rof);
    Register(in=in, load=dmog, out=rog);
    Register(in=in, load=dmoh, out=roh);
    Mux8Way16(a=roa, b=rob, c=roc, d=rod, e=roe, f=rof, g=rog, h=roh, sel=address, out=out);
}